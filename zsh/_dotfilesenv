#compdef dotfilesenv

function _dotfilesenv(){
  local context curcontext="$curcontext" state line
  typeset -A opt_args

  local ret=1
  local allowed_commands=(dotfilesenv delete git add reset commit push origin pull origin link list restore view)

  local cmd=''
  local option=''
  local cmd_pos=0
  local option_pos=0
  local pos=0

  for v in $(echo $LBUFFER); do
    if [[ $v =~ ^-.+ ]]; then
      option=$v
      option_pos=$pos
    else
      if [[ -n ${allowed_commands[(re)${v}]} ]]; then
        cmd+=_${v}
        cmd_pos=$pos
      fi
    fi
    (( pos++ ))
  done;
  
  if [ $cmd_pos -lt $option_pos ]; then
    local opt=${option#-}
    opt=${opt#-}
    cmd+=_${opt}
  fi

  case $cmd in
    (_dotfilesenv_delete)
      _arguments \
        '*: :_dotfilesenv_settings' && ret=0 
      ;;
    (_dotfilesenv_git_add_a)
      _arguments \
        '*: ::' && ret=0 
      ;;
    (_dotfilesenv_git_add)
      _arguments \
        '(-a --all)'{-a,--all}'[add changes from all tracked and untracked files]' \
        '*: ::' && ret=0 
      ;;
    (_dotfilesenv_git_commit_m)
      _arguments \
        '*: ::' && ret=0 
      ;;
    (_dotfilesenv_git_commit)
      _arguments \
        '(-m --message)'{-m,--message}'[commit message]' \
        '*: ::' && ret=0 
      ;;
    (_dotfilesenv_git_push_origin)
      _arguments \
        '*: :_dotfilesenv_git_push_origin_args' && ret=0 
      ;;
    (_dotfilesenv_git_push)
      _arguments \
        '*: :_dotfilesenv_git_push_args' && ret=0 
      ;;
    (_dotfilesenv_git_pull_origin)
      _arguments \
        '*: :_dotfilesenv_git_pull_origin_args' && ret=0 
      ;;
    (_dotfilesenv_git_pull)
      _arguments \
        '*: :_dotfilesenv_git_pull_args' && ret=0 
      ;;
    (_dotfilesenv_git)
      _arguments \
        '*: :_dotfilesenv_git_args' && ret=0 
      ;;
    (_dotfilesenv_list)
      _arguments \
        '*: ::' && ret=0 
      ;;
    (_dotfilesenv_restore)
      _arguments \
        '*: :_dotfilesenv_settings' && ret=0 
      ;;
    (_dotfilesenv)
      _arguments \
        '(-v --version)'{-v,--version}'[show version]' \
        '(--help)--help[show help]' \
        '*: :_dotfilesenv_args' && ret=0 
      ;;
    (*)
      _arguments         '*: :_files -/' && ret=0 
  esac

  return $ret
}



function _dotfilesenv_args() {
  local commands; commands=(
    'delete:delete a setting'
    'git:git command alias for ~/.dotfilesenv directory'
    'link:create a new setting and link'
    'list:show settings'
    'restore:restore settings from .dotfilesenv'
    'view:view ~/.dotfilesenv by specified command'
  )
  _describe -t commands "_dotfilesenv_args" commands "$@"
}


function _dotfilesenv_git_args() {
  local commands; commands=(
    'add:Add file contents to the index'
    'reset:Reset current HEAD to the specified state'
    'commit:Record changes to the repository'
    'push:Update remote refs along with associated objects'
    'pull:Fetch from and integrate with another repository or a local branch'
  )
  _describe -t commands "_dotfilesenv_git_args" commands "$@"
}


function _dotfilesenv_git_push_args() {
  local commands; commands=(
    'origin:'
  )
  _describe -t commands "_dotfilesenv_git_push_args" commands "$@"
}


function _dotfilesenv_git_push_origin_args() {
  _values \
    'values' \
    master \
}


function _dotfilesenv_git_pull_args() {
  local commands; commands=(
    'origin:'
  )
  _describe -t commands "_dotfilesenv_git_pull_args" commands "$@"
}


function _dotfilesenv_git_pull_origin_args() {
  _values \
    'values' \
    master \
}

fucntion _dotfilesenv_settings() {
  _values 'settings' $(dotfilesenv list -v)
}


_dotfilesenv "$@"
